const l=JSON.parse('{"key":"v-5e972326","path":"/Books/%E3%80%8ATypeScript%20%E6%95%99%E7%A8%8B%E3%80%8B%E7%AC%94%E8%AE%B0/02.TypeScript%E8%AE%AD%E7%BB%83.html","title":"TypeScript训练","lang":"zh-CN","frontmatter":{"title":"TypeScript训练","date":"2023-05-05T08:56:57.000Z","categories":["前端","学习笔记"],"tags":["TypeScript"],"author":{"name":"HokageYeah","link":"https://github.com/HokageYeah"}},"headers":[{"level":2,"title":"说在前面","slug":"说在前面","link":"#说在前面","children":[]},{"level":2,"title":"混合","slug":"混合","link":"#混合","children":[{"level":3,"title":"实现元组转换对象","slug":"实现元组转换对象","link":"#实现元组转换对象","children":[]},{"level":3,"title":"实现 exclude","slug":"实现-exclude","link":"#实现-exclude","children":[]},{"level":3,"title":"实现 Include","slug":"实现-include","link":"#实现-include","children":[]},{"level":3,"title":"实现 If","slug":"实现-if","link":"#实现-if","children":[]}]},{"level":2,"title":"数组系列","slug":"数组系列","link":"#数组系列","children":[{"level":3,"title":"实现 First","slug":"实现-first","link":"#实现-first","children":[]},{"level":3,"title":"实现 End","slug":"实现-end","link":"#实现-end","children":[]},{"level":3,"title":"实现 Unshitf","slug":"实现-unshitf","link":"#实现-unshitf","children":[]},{"level":3,"title":"实现 Shitf","slug":"实现-shitf","link":"#实现-shitf","children":[]},{"level":3,"title":"实现 Push","slug":"实现-push","link":"#实现-push","children":[]},{"level":3,"title":"获取 Length","slug":"获取-length","link":"#获取-length","children":[]},{"level":3,"title":"实现 concat","slug":"实现-concat","link":"#实现-concat","children":[]},{"level":3,"title":"实现 Reverse","slug":"实现-reverse","link":"#实现-reverse","children":[]},{"level":3,"title":"📦 实现 LastIndexOf","slug":"实现-lastindexof","link":"#实现-lastindexof","children":[]},{"level":3,"title":"📦 实现 Combination","slug":"实现-combination","link":"#实现-combination","children":[]},{"level":3,"title":"📦 实现 Filter","slug":"实现-filter","link":"#实现-filter","children":[]},{"level":3,"title":"实现 Unique","slug":"实现-unique","link":"#实现-unique","children":[]},{"level":3,"title":"实现 GetMiddleElement","slug":"实现-getmiddleelement","link":"#实现-getmiddleelement","children":[]},{"level":3,"title":"实现 Appear only once","slug":"实现-appear-only-once","link":"#实现-appear-only-once","children":[]},{"level":3,"title":"实现数组扁平化","slug":"实现数组扁平化","link":"#实现数组扁平化","children":[]},{"level":3,"title":"指定深度扁平化","slug":"指定深度扁平化","link":"#指定深度扁平化","children":[]},{"level":3,"title":"实现指定删除数组内容","slug":"实现指定删除数组内容","link":"#实现指定删除数组内容","children":[]},{"level":3,"title":"实现给定长度的数组","slug":"实现给定长度的数组","link":"#实现给定长度的数组","children":[]},{"level":3,"title":"🍅 实现矩阵变换","slug":"实现矩阵变换","link":"#实现矩阵变换","children":[]}]},{"level":2,"title":"ReadOnly 系列","slug":"readonly-系列","link":"#readonly-系列","children":[{"level":3,"title":"实现 Readonly","slug":"实现-readonly","link":"#实现-readonly","children":[]},{"level":3,"title":"🍔 实现 DeepReadOnly","slug":"实现-deepreadonly","link":"#实现-deepreadonly","children":[]},{"level":3,"title":"🍔 实现 Mutable","slug":"实现-mutable","link":"#实现-mutable","children":[]},{"level":3,"title":"🍔 实现 DeepMutable","slug":"实现-deepmutable","link":"#实现-deepmutable","children":[]}]},{"level":2,"title":"字符串","slug":"字符串","link":"#字符串","children":[{"level":3,"title":"实现字符串首字母大写","slug":"实现字符串首字母大写","link":"#实现字符串首字母大写","children":[]},{"level":3,"title":"实现字符串替换","slug":"实现字符串替换","link":"#实现字符串替换","children":[]},{"level":3,"title":"实现获取字符串长度","slug":"实现获取字符串长度","link":"#实现获取字符串长度","children":[]},{"level":3,"title":"实现字符串转换联合类型","slug":"实现字符串转换联合类型","link":"#实现字符串转换联合类型","children":[]},{"level":3,"title":"实现是否是给定字符串开头","slug":"实现是否是给定字符串开头","link":"#实现是否是给定字符串开头","children":[]},{"level":3,"title":"实现去掉字符串空格","slug":"实现去掉字符串空格","link":"#实现去掉字符串空格","children":[]},{"level":3,"title":"实现删除符合要求的字符串","slug":"实现删除符合要求的字符串","link":"#实现删除符合要求的字符串","children":[]},{"level":3,"title":"✂️ 实现驼峰命名转换短横线命名","slug":"实现驼峰命名转换短横线命名","link":"#实现驼峰命名转换短横线命名","children":[]},{"level":3,"title":"🍅  现判断一个字符串中字符是否重复","slug":"现判断一个字符串中字符是否重复","link":"#现判断一个字符串中字符是否重复","children":[]},{"level":3,"title":"🍅 实现 单词首字母大写","slug":"实现-单词首字母大写","link":"#实现-单词首字母大写","children":[]},{"level":3,"title":"🍅 实现 CamelCase","slug":"实现-camelcase","link":"#实现-camelcase","children":[]},{"level":3,"title":"❓ 实现 LengthOfString","slug":"实现-lengthofstring","link":"#实现-lengthofstring","children":[]}]},{"level":2,"title":"函数系列","slug":"函数系列","link":"#函数系列","children":[{"level":3,"title":"实现获取函数返回类型","slug":"实现获取函数返回类型","link":"#实现获取函数返回类型","children":[]},{"level":3,"title":"实现参数追加","slug":"实现参数追加","link":"#实现参数追加","children":[]},{"level":3,"title":"实现函数参数反转","slug":"实现函数参数反转","link":"#实现函数参数反转","children":[]}]},{"level":2,"title":"Object 系列","slug":"object-系列","link":"#object-系列","children":[{"level":3,"title":"实现连两个对象合并","slug":"实现连两个对象合并","link":"#实现连两个对象合并","children":[]},{"level":3,"title":"🚪实现可配置可选链","slug":"实现可配置可选链","link":"#实现可配置可选链","children":[]},{"level":3,"title":"实现为一个接口添加新类型","slug":"实现为一个接口添加新类型","link":"#实现为一个接口添加新类型","children":[]},{"level":3,"title":"🍵 实现 Diff","slug":"实现-diff","link":"#实现-diff","children":[]},{"level":3,"title":"🚀 实现属性替换","slug":"实现属性替换","link":"#实现属性替换","children":[]},{"level":3,"title":"🏁 实现移除索引签名","slug":"实现移除索引签名","link":"#实现移除索引签名","children":[]},{"level":3,"title":"🤔 实现 Entries","slug":"实现-entries","link":"#实现-entries","children":[]},{"level":3,"title":"🤔 实现 元组递归转换成对象","slug":"实现-元组递归转换成对象","link":"#实现-元组递归转换成对象","children":[]},{"level":3,"title":"🤔 实现 将元组转换成枚举","slug":"实现-将元组转换成枚举","link":"#实现-将元组转换成枚举","children":[]}]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"实现 Omit","slug":"实现-omit","link":"#实现-omit","children":[]},{"level":3,"title":"实现元组转换成联合类型","slug":"实现元组转换成联合类型","link":"#实现元组转换成联合类型","children":[]},{"level":3,"title":"实现 Absolute","slug":"实现-absolute","link":"#实现-absolute","children":[]},{"level":3,"title":"❓ 实现 Anyof","slug":"实现-anyof","link":"#实现-anyof","children":[]},{"level":3,"title":"❌ 实现 IsNever","slug":"实现-isnever","link":"#实现-isnever","children":[]},{"level":3,"title":"🤔 实现 isUnion","slug":"实现-isunion","link":"#实现-isunion","children":[]},{"level":3,"title":"🤔 实现 MinusOne","slug":"实现-minusone","link":"#实现-minusone","children":[]},{"level":3,"title":"实现 PickByType","slug":"实现-pickbytype","link":"#实现-pickbytype","children":[]},{"level":3,"title":"🍅 实现 PartialByKeys","slug":"实现-partialbykeys","link":"#实现-partialbykeys","children":[]},{"level":3,"title":"实现 OmitByType","slug":"实现-omitbytype","link":"#实现-omitbytype","children":[]},{"level":3,"title":"📄 Bem 架构","slug":"bem-架构","link":"#bem-架构","children":[]},{"level":3,"title":"🍅  指定返回的联合类型","slug":"指定返回的联合类型","link":"#指定返回的联合类型","children":[]}]},{"level":2,"title":"其他","slug":"其他-1","link":"#其他-1","children":[{"level":3,"title":"🍅  实现柯里化","slug":"实现柯里化","link":"#实现柯里化","children":[]},{"level":3,"title":"🍅  实现 GetRequired","slug":"实现-getrequired","link":"#实现-getrequired","children":[]},{"level":3,"title":"🍅 实现 GetRequiredkeys","slug":"实现-getrequiredkeys","link":"#实现-getrequiredkeys","children":[]},{"level":3,"title":"🍅 实现 GetOptional","slug":"实现-getoptional","link":"#实现-getoptional","children":[]},{"level":3,"title":"🍅 实现 GetOptionalKeys","slug":"实现-getoptionalkeys","link":"#实现-getoptionalkeys","children":[]},{"level":3,"title":"❌ 实现 PromiseAll","slug":"实现-promiseall","link":"#实现-promiseall","children":[]},{"level":3,"title":"❌ 实现 JSONP","slug":"实现-jsonp","link":"#实现-jsonp","children":[]},{"level":3,"title":"🍅 实现 SimpleVue","slug":"实现-simplevue","link":"#实现-simplevue","children":[]},{"level":3,"title":"🍵 实现将字符串转换成数字","slug":"实现将字符串转换成数字","link":"#实现将字符串转换成数字","children":[]},{"level":3,"title":"🤔 实现两数之和","slug":"实现两数之和","link":"#实现两数之和","children":[]},{"level":3,"title":"😋 实现日期验证","slug":"实现日期验证","link":"#实现日期验证","children":[]},{"level":3,"title":"🍰 实现 Get","slug":"实现-get","link":"#实现-get","children":[]},{"level":3,"title":"🍅 实现 MaxNum","slug":"实现-maxnum","link":"#实现-maxnum","children":[]}]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"Books/《TypeScript 教程》笔记/02.TypeScript训练.md"}');export{l as data};
