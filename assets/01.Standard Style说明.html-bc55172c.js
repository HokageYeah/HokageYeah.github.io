import{_ as d,r as l,o as i,c,f as p,d as n,e as s,a,w as o,b as t}from"./app-e9249a1b.js";const u={},h=t('<h1 id="standard-style说明" tabindex="-1"><a class="header-anchor" href="#standard-style说明" aria-hidden="true">#</a> Standard Style说明</h1><h1 align="center"><a href="https://standardjs.com"><img src="https://cdn.rawgit.com/standard/standard/master/sticker.svg" alt="Standard - JavaScript 代码规范" width="200"></a><br> JavaScript Standard Style <br><br></h1><p align="center"><a href="https://travis-ci.org/standard/standard"><img src="https://img.shields.io/travis/standard/standard/master.svg" alt="travis"></a><a href="https://www.npmjs.com/package/standard"><img src="https://img.shields.io/npm/v/standard.svg" alt="npm version"></a><a href="https://www.npmjs.com/package/eslint-config-standard"><img src="https://img.shields.io/npm/dm/eslint-config-standard.svg" alt="npm downloads"></a><a href="https://standardjs.com"><img src="https://img.shields.io/badge/code_style-standard-brightgreen.svg" alt="Standard - JavaScript Style Guide"></a></p>',3),m=n("h5",{align:"center"},[s(" Sponsored by    "),n("a",{href:"https://socket.dev"},[n("img",{src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/socket.png",alt:"Socket – Supply Chain Dependency Security for JavaScript and npm",height:"50",valign:"middle"})]),s("    "),n("a",{href:"https://wormhole.app/?utm_medium=sponsorship&utm_source=standard&utm_campaign=feross"},[n("img",{src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/wormhole.png",alt:"Wormhole",height:"50",valign:"middle"})])],-1),g=t(`<h2 id="javascript-代码规范-自带-linter-代码自动修正" tabindex="-1"><a class="header-anchor" href="#javascript-代码规范-自带-linter-代码自动修正" aria-hidden="true">#</a> JavaScript 代码规范，自带 linter &amp; 代码自动修正</h2><p>本工具通过以下三种方式为你（及你的团队）节省大量时间：</p><ul><li><strong>无须配置。</strong> 史上最便捷的统一代码风格的方式，轻松拥有。</li><li><strong>自动代码格式化。</strong> 只需运行 <code>standard --fix</code> 从此和脏乱差的代码说再见。</li><li><strong>提前发现风格及程序问题。</strong> 减少代码审查过程中反反复复的修改过程，节约时间。</li></ul><p>无须犹豫。再也不用维护 <code>.eslintrc</code>, <code>.jshintrc</code>, or <code>.jscsrc</code> 。开箱即用。</p><p>安装：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install standard --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="细则" tabindex="-1"><a class="header-anchor" href="#细则" aria-hidden="true">#</a> 细则</h2>`,7),b=n("li",null,[n("strong",null,"使用两个空格"),s(" – 进行缩进")],-1),k=n("li",null,[n("strong",null,"字符串使用单引号"),s(" – 需要转义的地方除外")],-1),v=n("li",null,[n("strong",null,"不再有冗余的变量"),s(" – 这是导致 "),n("em",null,"大量"),s(" bug 的源头!")],-1),_=n("strong",null,"无分号",-1),f={href:"http://blog.izs.me/post/2353458699/an-open-letter-to-javascript-leaders-regarding",target:"_blank",rel:"noopener noreferrer"},E={href:"https://web.archive.org/web/20201206065632/http://inimino.org/~inimino/blog/javascript_semicolons",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.youtube.com/watch?v=gsfbh17Ax9I",target:"_blank",rel:"noopener noreferrer"},y=n("strong",null,[s("行首不要以 "),n("code",null,"("),s(", "),n("code",null,"["),s(", or "),n("code",null,"`"),s(" 开头")],-1),B=n("li",null,[s("这是省略分号时"),n("strong",null,"唯一"),s("会造成问题的地方 – "),n("em",null,"工具里已加了自动检测！")],-1),j=t("<li><strong>关键字后加空格</strong> <code>if (condition) { ... }</code></li><li><strong>函数名后加空格</strong> <code>function name (arg) { ... }</code></li><li>坚持使用全等 <code>===</code> 摒弃 <code>==</code> 一但在需要检查 <code>null || undefined</code> 时可以使用 <code>obj == null</code>。</li><li>一定要处理 Node.js 中错误回调传递进来的 <code>err</code> 参数。</li><li>使用浏览器全局变量时加上 <code>window</code> 前缀 – <code>document</code> 和 <code>navigator</code> 除外 <ul><li>避免无意中使用到了这些命名看上去很普通的全局变量， <code>open</code>, <code>length</code>, <code>event</code> 还有 <code>name</code>。</li></ul></li>",5),A=n("em",null,[s("为何不试试 "),n("code",null,"standard"),s(" 规范呢！")],-1),x={href:"https://github.com/expressjs/body-parser/blob/master/index.js",target:"_blank",rel:"noopener noreferrer"},S={href:"https://raw.githubusercontent.com/standard/standard-packages/master/all.json",target:"_blank",rel:"noopener noreferrer"},q=t(`<h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li>上手 <ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li><li><a href="#%E5%A6%82%E6%9E%9C%E4%BD%A0%E8%81%AA%E6%98%8E%E7%9A%84%E8%AF%9D%E4%BC%9A%E8%BF%99%E6%A0%B7%E5%81%9A">如果你聪明的话会这样做</a></li></ul></li><li>FAQ <ul><li><a href="#%E4%B8%BA%E4%BD%95%E8%A6%81%E4%BD%BF%E7%94%A8-javascript-standard-%E8%A7%84%E8%8C%83">为何要使用 JavaScript Standard 规范？</a></li><li><a href="#%E8%B0%81%E5%9C%A8%E7%94%A8-javascript-standard-%E8%A7%84%E8%8C%83">谁在用 JavaScript Standard 规范？</a></li><li><a href="#%E6%9C%89%E7%8E%B0%E6%88%90%E7%9A%84%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6%E5%90%97">有现成的编辑器插件吗？</a></li><li><a href="#%E6%9C%89%E4%B8%93%E5%B1%9E%E5%BE%BD%E7%AB%A0%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E6%94%BE%E5%88%B0%E9%A1%B9%E7%9B%AE%E7%9A%84-readme-%E6%96%87%E4%BB%B6%E4%B8%AD%E5%90%97">有专属徽章可以用来放到项目的 README 文件中吗？</a></li><li><a href="#%E5%A6%82%E6%9E%9C%E6%88%91%E4%B8%8D%E5%90%8C%E6%84%8F%E6%9F%90%E6%9D%A1%E8%A7%84%E5%88%99%E5%8F%AF%E4%BB%A5%E6%94%B9%E5%90%97">如果我不同意某条规则，可以改吗？</a></li><li><a href="#%E6%AF%95%E7%AB%9F%E8%BF%99%E4%B8%8D%E6%98%AF%E4%B8%80%E4%BB%BD%E6%AD%A3%E5%BC%8F%E7%9A%84-web-%E8%A7%84%E8%8C%83%E5%95%8A">毕竟这不是一份正式的 Web 规范啊！</a></li><li><a href="#%E6%9C%89%E8%87%AA%E5%8A%A8%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%88">有自动格式化工具么？</a></li><li><a href="#%E5%A6%82%E4%BD%95%E6%8E%92%E9%99%A4%E6%9F%90%E4%BA%9B%E6%96%87%E4%BB%B6">如何排除某些文件？</a></li><li><a href="#%E5%A6%82%E4%BD%95%E9%9A%90%E8%97%8F%E6%9F%90%E7%B1%BB%E8%AD%A6%E5%91%8A">如何隐藏某类警告？</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%89%E6%96%B9%E6%8F%92%E4%BB%B6%E5%90%91%E5%85%A8%E5%B1%80%E6%9A%B4%E9%9C%B2%E4%BA%86%E5%8F%98%E9%87%8F%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D-variable-is-not-defined-%E7%9A%84%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA">使用的三方插件向全局暴露了变量，如何避免 &quot;variable is not defined&quot; 的错误提示？</a></li><li><a href="#%E5%A6%82%E4%BD%95%E6%89%8D%E8%83%BD%E4%BD%BF%E7%94%A8%E5%A4%84%E4%BA%8E%E5%AE%9E%E9%AA%8C%E9%98%B6%E6%AE%B5%E7%9A%84-javascript-%E7%89%B9%E6%80%A7%E8%AD%AC%E5%A6%82-es-next">如何才能使用处于实验阶段的 JavaScript 特性（譬如 ES Next）？</a></li><li><a href="#%E6%88%91%E8%83%BD%E4%BD%BF%E7%94%A8%E5%85%B6%E4%BB%96-javascript-%E5%8F%98%E7%A7%8D%E5%90%97%E4%BE%8B%E5%A6%82-flow">我能使用其他 JavaScript 变种吗，例如 Flow？</a></li><li><a href="#%E5%A6%82%E4%BD%95%E4%B8%8E-mochajasmine-%E5%92%8C-qunit-%E8%BF%99%E4%BA%9B%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E6%90%AD%E9%85%8D%E5%B7%A5%E4%BD%9C">如何与 Mocha，Jasmine 和 QUnit 这些测试工具搭配工作?</a></li><li><a href="#web-workers-%E6%9C%89%E8%80%83%E8%99%91%E8%BF%87%E4%B9%88">Web Workers 有考虑过么？</a></li><li><a href="#markdown-%E6%88%96%E8%80%85-html-%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%A0%81%E8%83%BD%E6%A3%80%E6%9F%A5%E5%88%B0%E5%90%97">Markdown 或者 HTML 文件中的代码能检查到吗？</a></li><li><a href="#%E6%9C%89%E4%B8%BA-git-%E6%B7%BB%E5%8A%A0-pre-commit-%E9%92%A9%E5%AD%90%E4%B9%88">有为 git 添加 <code>pre-commit</code> 钩子么？</a></li><li><a href="#%E6%80%8E%E6%A0%B7%E4%BD%BF%E8%BE%93%E5%87%BA%E5%A5%BD%E7%9C%8B%E4%BA%9B%E5%B8%A6%E9%A2%9C%E8%89%B2">怎样使输出好看些，带颜色？</a></li><li><a href="#%E6%9C%89%E7%9B%B8%E5%85%B3%E7%9A%84-nodejs-api-%E6%B2%A1">有相关的 Node.js API 没？</a></li><li><a href="#%E5%A6%82%E4%BD%95%E5%8F%82%E4%B8%8E%E5%88%B0-standard-%E8%A7%84%E8%8C%83%E4%B8%AD%E6%9D%A5">如何参与到 <code>standard</code> 规范中来？</a></li></ul></li><li><a href="#%E5%8D%8F%E8%AE%AE">协议</a></li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>使用本规范最便捷的方式是全局安装，运行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> standard <span class="token parameter variable">--global</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者非全局的方式，针对某个项目进行安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> standard --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),D={href:"http://nodejs.org",target:"_blank",rel:"noopener noreferrer"},F={href:"https://npmjs.com",target:"_blank",rel:"noopener noreferrer"},C=t(`<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>安装完就可以开心使用了。最简单的使用场景是检查项目内所有的 JavaScript 文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ standard
Error: Use JavaScript Standard Style
  lib/torrent.js:950:11: Expected <span class="token string">&#39;===&#39;</span> and instead saw <span class="token string">&#39;==&#39;</span><span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以跟上 glob 形式的路径参数，但记得带引号以确保 <code>standard</code> 工具正确解析，否则会被命令行解析。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ standard <span class="token string">&quot;src/util/**/*.js&quot;</span> <span class="token string">&quot;test/**/*.js&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>注意：</strong> <code>standard</code> 默认查找 <code>**/*.js</code>, <code>**/*.jsx</code> 所匹配到的文件。</p><h2 id="如果你聪明的话会这样做" tabindex="-1"><a class="header-anchor" href="#如果你聪明的话会这样做" aria-hidden="true">#</a> 如果你聪明的话会这样做</h2><ol><li>添加配置到 <code>package.json</code></li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-cool-package&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;standard&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;standard &amp;&amp; node my-tests.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>这样检查工作就会在运行 <code>npm test</code> 自动进行</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token builtin class-name">test</span>
Error: Use JavaScript Standard Style
  lib/torrent.js:950:11: Expected <span class="token string">&#39;===&#39;</span> and instead saw <span class="token string">&#39;==&#39;</span><span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>从此告别在提 PR 时的代码风格的问题！</li></ol><h2 id="为何要使用-javascript-standard-规范" tabindex="-1"><a class="header-anchor" href="#为何要使用-javascript-standard-规范" aria-hidden="true">#</a> 为何要使用 JavaScript Standard 规范？</h2><p>本规范特点之一是简洁。谁也不想为每个项目维护一份有成百上千行语句的代码风格配置文件。有此规范就够了。</p><p>本工具通过以下三种方式为你（及你的团队）节省大量时间：</p><ul><li><strong>无须配置。</strong> 史上最便捷的统一代码风格的方式，轻松拥有。</li><li><strong>自动的代码格式化。</strong> 只需运行 <code>standard --fix</code> 从此和脏乱差的代码说再见。</li><li><strong>提前发现风格及程序问题。</strong> 减少代码审查时的反反复复修改过程，节约时间。</li></ul><p>一旦使用 <code>standard</code> 规范表明代码的简明性及社区的约定要高于个人的编码风格。这不一定100%适用于所有项目和多元的编程文化，但开源项目代码容易受到新手的影响。把规范讲明，严格执行对于项目的长远维护不无裨益。</p><h2 id="谁在用-javascript-standard-规范" tabindex="-1"><a class="header-anchor" href="#谁在用-javascript-standard-规范" aria-hidden="true">#</a> 谁在用 JavaScript Standard 规范？</h2><p>我们是有群众基础的！</p>`,19),J={href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"},M=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/nodejs.png"},null,-1),z={href:"https://www.npmjs.com",target:"_blank",rel:"noopener noreferrer"},I=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/npm.png"},null,-1),L={href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},R=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/github.png"},null,-1),$={href:"https://www.elastic.co",target:"_blank",rel:"noopener noreferrer"},N=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/elastic.png"},null,-1),T={href:"http://expressjs.com",target:"_blank",rel:"noopener noreferrer"},V=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/express.png"},null,-1),P={href:"http://electron.atom.io",target:"_blank",rel:"noopener noreferrer"},G=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/electron.png"},null,-1),W={href:"https://nuxtjs.org/",target:"_blank",rel:"noopener noreferrer"},U=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/nuxtjs.png"},null,-1),H={href:"https://atom.io",target:"_blank",rel:"noopener noreferrer"},Q=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/atom.png"},null,-1),Y={href:"https://www.mongodb.com",target:"_blank",rel:"noopener noreferrer"},K=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/mongodb.jpg"},null,-1),X={href:"https://www.zendesk.com",target:"_blank",rel:"noopener noreferrer"},O=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/zendesk.png"},null,-1),Z={href:"https://www.brave.com",target:"_blank",rel:"noopener noreferrer"},nn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/brave.png"},null,-1),sn={href:"https://zeit.co",target:"_blank",rel:"noopener noreferrer"},an=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/zeit.png"},null,-1),en={href:"https://nodesource.com",target:"_blank",rel:"noopener noreferrer"},tn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/nodesource.png"},null,-1),rn={href:"http://www.nearform.com",target:"_blank",rel:"noopener noreferrer"},on=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/nearform.png"},null,-1),ln={href:"https://www.typeform.com",target:"_blank",rel:"noopener noreferrer"},dn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/typeform.png"},null,-1),cn={href:"https://gds.blog.gov.uk",target:"_blank",rel:"noopener noreferrer"},pn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/gov-uk.png"},null,-1),un={href:"https://www.heroku.com",target:"_blank",rel:"noopener noreferrer"},hn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/heroku.png"},null,-1),mn={href:"https://saucelabs.com",target:"_blank",rel:"noopener noreferrer"},gn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/saucelabs.png"},null,-1),bn={href:"https://automattic.com",target:"_blank",rel:"noopener noreferrer"},kn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/automattic.png"},null,-1),vn={href:"https://www.godaddy.com",target:"_blank",rel:"noopener noreferrer"},_n=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/godaddy.png"},null,-1),fn={href:"https://webtorrent.io",target:"_blank",rel:"noopener noreferrer"},En=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/webtorrent.png"},null,-1),wn={href:"https://ipfs.io",target:"_blank",rel:"noopener noreferrer"},yn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/ipfs.png"},null,-1),Bn={href:"https://datproject.org",target:"_blank",rel:"noopener noreferrer"},jn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/dat.png"},null,-1),An={href:"https://bitcoinjs.org",target:"_blank",rel:"noopener noreferrer"},xn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/bitcoinjs.png"},null,-1),Sn={href:"https://voltra.co",target:"_blank",rel:"noopener noreferrer"},qn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/voltra.png"},null,-1),Dn={href:"https://www.treasuredata.com",target:"_blank",rel:"noopener noreferrer"},Fn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/treasuredata.png"},null,-1),Cn={href:"https://bitmidi.com",target:"_blank",rel:"noopener noreferrer"},Jn=n("img",{alt:"Free MIDIs, MIDI file downloads",width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/bitmidi.png"},null,-1),Mn={href:"https://www.apstudynotes.org",target:"_blank",rel:"noopener noreferrer"},zn=n("img",{width:"190",alt:"College essays, AP notes",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/studynotes.jpg"},null,-1),In={href:"https://www.optiopay.com",target:"_blank",rel:"noopener noreferrer"},Ln=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/optiopay.png"},null,-1),Rn={href:"https://www.jlrtechincubator.com/jlrti/",target:"_blank",rel:"noopener noreferrer"},$n=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/jaguar-landrover.png"},null,-1),Nn={href:"https://www.bustle.com",target:"_blank",rel:"noopener noreferrer"},Tn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/bustle.jpg"},null,-1),Vn={href:"https://www.zentrick.com",target:"_blank",rel:"noopener noreferrer"},Pn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/zentrick.png"},null,-1),Gn={href:"https://greenkeeper.io",target:"_blank",rel:"noopener noreferrer"},Wn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/greenkeeper.png"},null,-1),Un={href:"https://karma-runner.github.io",target:"_blank",rel:"noopener noreferrer"},Hn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/karma.png"},null,-1),Qn={href:"https://www.taser.com",target:"_blank",rel:"noopener noreferrer"},Yn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/taser.png"},null,-1),Kn={href:"https://www.neo4j.com",target:"_blank",rel:"noopener noreferrer"},Xn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/neo4j.png"},null,-1),On={href:"https://rentograph.com",target:"_blank",rel:"noopener noreferrer"},Zn=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/rentograph.png"},null,-1),ns={href:"https://www.eaze.com",target:"_blank",rel:"noopener noreferrer"},ss=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/eaze.png"},null,-1),as={href:"https://www.ctrlaltdeseat.com",target:"_blank",rel:"noopener noreferrer"},es=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/ctrl-alt-deseat.png"},null,-1),ts={href:"https://clevertech.biz",target:"_blank",rel:"noopener noreferrer"},rs=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/clevertech.png"},null,-1),os={href:"https://aragon.org",target:"_blank",rel:"noopener noreferrer"},ls=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/aragon.png"},null,-1),ds={href:"https://www.flowsent.com",target:"_blank",rel:"noopener noreferrer"},is=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/flowsent.png"},null,-1),cs={href:"https://www.pumabrowser.com/",target:"_blank",rel:"noopener noreferrer"},ps=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/puma-browser.png"},null,-1),us={href:"https://www.jetbrains.com/webstorm/",target:"_blank",rel:"noopener noreferrer"},hs=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/webstorm.png"},null,-1),ms={href:"https://www.fastify.io",target:"_blank",rel:"noopener noreferrer"},gs=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/fastify.png"},null,-1),bs={href:"https://www.scuttlebutt.nz",target:"_blank",rel:"noopener noreferrer"},ks=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/scuttlebutt.png"},null,-1),vs={href:"https://solid.inrupt.com",target:"_blank",rel:"noopener noreferrer"},_s=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/solid.png"},null,-1),fs={href:"https://www.grab.com",target:"_blank",rel:"noopener noreferrer"},Es=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/grab.png"},null,-1),ws={href:"https://jublia.com/",target:"_blank",rel:"noopener noreferrer"},ys=n("img",{width:"190",src:"https://cdn.rawgit.com/standard/standard/master/docs/logos/jublia.png"},null,-1),Bs=n("th",null,"Your logo here",-1),js=n("th",null,"Your logo here",-1),As=n("th",null,"Your logo here",-1),xs={href:"https://raw.githubusercontent.com/standard/standard-packages/master/all.json",target:"_blank",rel:"noopener noreferrer"},Ss=n("code",null,"standard",-1),qs={href:"https://github.com/showcases/clean-code-linters",target:"_blank",rel:"noopener noreferrer"},Ds=n("h2",{id:"有现成的编辑器插件吗",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#有现成的编辑器插件吗","aria-hidden":"true"},"#"),s(" 有现成的编辑器插件吗？")],-1),Fs=n("p",null,[s("首先安装 "),n("code",null,"standard"),s("。剩下的就是不同编译器安装对应的插件：")],-1),Cs=n("h3",{id:"sublime-text",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sublime-text","aria-hidden":"true"},"#"),s(" Sublime Text")],-1),Js={href:"https://packagecontrol.io/",target:"_blank",rel:"noopener noreferrer"},Ms={href:"http://www.sublimelinter.com/en/latest/",target:"_blank",rel:"noopener noreferrer"},zs={href:"https://packagecontrol.io/packages/SublimeLinter-contrib-standard",target:"_blank",rel:"noopener noreferrer"},Is={href:"https://packagecontrol.io/packages/StandardFormat",target:"_blank",rel:"noopener noreferrer"},Ls=n("h3",{id:"atom",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#atom","aria-hidden":"true"},"#"),s(" Atom")],-1),Rs={href:"https://atom.io/packages/linter-js-standard",target:"_blank",rel:"noopener noreferrer"},$s={href:"https://atom.io/packages/standard-formatter",target:"_blank",rel:"noopener noreferrer"},Ns={href:"https://atom.io/packages/standardjs-snippets",target:"_blank",rel:"noopener noreferrer"},Ts=n("h3",{id:"visual-studio-code",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#visual-studio-code","aria-hidden":"true"},"#"),s(" Visual Studio Code")],-1),Vs={href:"https://marketplace.visualstudio.com/items?itemName=standard.vscode-standard",target:"_blank",rel:"noopener noreferrer"},Ps={href:"https://marketplace.visualstudio.com/items?itemName=capaj.vscode-standardjs-snippets",target:"_blank",rel:"noopener noreferrer"},Gs={href:"https://marketplace.visualstudio.com/items?itemName=TimonVS.ReactSnippetsStandard",target:"_blank",rel:"noopener noreferrer"},Ws=n("h3",{id:"vim",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vim","aria-hidden":"true"},"#"),s(" Vim")],-1),Us={href:"https://github.com/scrooloose/syntastic",target:"_blank",rel:"noopener noreferrer"},Hs=n("code",null,".vimrc",-1),Qs=t(`<div class="language-vim line-numbers-mode" data-ext="vim"><pre class="language-vim"><code><span class="token keyword">let</span> g<span class="token punctuation">:</span>syntastic_javascript_checkers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;standard&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果想要保存时自动格式化，添加以下配置到 <code>.vimrc</code>：</p><div class="language-vim line-numbers-mode" data-ext="vim"><pre class="language-vim"><code><span class="token builtin">autocmd</span> bufwritepost <span class="token operator">*</span><span class="token operator">.</span><span class="token builtin">js</span> <span class="token keyword">silent</span> <span class="token operator">!</span>standard <span class="token operator">-</span><span class="token operator">-</span><span class="token keyword">fix</span> <span class="token operator">%</span>
<span class="token keyword">set</span> <span class="token builtin">autoread</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="emacs" tabindex="-1"><a class="header-anchor" href="#emacs" aria-hidden="true">#</a> Emacs</h3>`,4),Ys={href:"http://www.flycheck.org",target:"_blank",rel:"noopener noreferrer"},Ks={href:"http://www.flycheck.org/en/latest/user/installation.html",target:"_blank",rel:"noopener noreferrer"},Xs=n("h3",{id:"brackets",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#brackets","aria-hidden":"true"},"#"),s(" Brackets")],-1),Os={href:"https://github.com/ishamf/brackets-standard/",target:"_blank",rel:"noopener noreferrer"},Zs=n("h3",{id:"webstorm-phpstorm-intellij-rubymine-jetbrains-等-jetbrains-全家桶系列",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#webstorm-phpstorm-intellij-rubymine-jetbrains-等-jetbrains-全家桶系列","aria-hidden":"true"},"#"),s(" WebStorm (PhpStorm, IntelliJ, RubyMine, JetBrains 等 jetbrains 全家桶系列)")],-1),na={href:"https://blog.jetbrains.com/webstorm/2017/01/webstorm-2017-1-eap-171-2272/",target:"_blank",rel:"noopener noreferrer"},sa=n("code",null,"standard",-1),aa=n("h2",{id:"有专属徽章可以用来放到项目的-readme-文件中吗",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#有专属徽章可以用来放到项目的-readme-文件中吗","aria-hidden":"true"},"#"),s(" 有专属徽章可以用来放到项目的 README 文件中吗？")],-1),ea=n("p",null,[s("必需的！如果你的项目使用了 "),n("code",null,"standard"),s(" 规范，可以任选一个下面的徽章放入项目中来进行展示。")],-1),ta={href:"https://github.com/standard/standard",target:"_blank",rel:"noopener noreferrer"},ra=n("img",{src:"https://cdn.rawgit.com/standard/standard/master/badge.svg",alt:"JavaScript Style Guide"},null,-1),oa=t(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url">[<span class="token content">![JavaScript Style Guide</span>](<span class="token url">https://cdn.rawgit.com/standard/standard/master/badge.svg</span>)</span>](https://github.com/standard/standard)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),la={href:"https://standardjs.com",target:"_blank",rel:"noopener noreferrer"},da=n("img",{src:"https://img.shields.io/badge/code_style-standard-brightgreen.svg",alt:"JavaScript Style Guide"},null,-1),ia=t(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url">[<span class="token content">![JavaScript Style Guide</span>](<span class="token url">https://img.shields.io/badge/code_style-standard-brightgreen.svg</span>)</span>](https://standardjs.com)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="如果我不同意某条规则-可以改吗" tabindex="-1"><a class="header-anchor" href="#如果我不同意某条规则-可以改吗" aria-hidden="true">#</a> 如果我不同意某条规则，可以改吗？</h2>`,2),ca=n("code",null,"standard",-1),pa={href:"https://www.freebsd.org/doc/en/books/faq/misc.html#bikeshed-painting",target:"_blank",rel:"noopener noreferrer"},ua=n("code",null,"standard",-1),ha={href:"https://github.com/standard/eslint-config-standard",target:"_blank",rel:"noopener noreferrer"},ma=t(`<p>小贴士：选择 <code>standard</code> 然后保持吧。把时间留下来解决其他有意义的问题！(^____^)/</p><h2 id="毕竟这不是一份正式的-web-规范啊" tabindex="-1"><a class="header-anchor" href="#毕竟这不是一份正式的-web-规范啊" aria-hidden="true">#</a> 毕竟这不是一份正式的 Web 规范啊！</h2><p>确实！这份规范不隶属于任何官方组织，所以才叫 <code>standard/standard</code> 而不是 <code>ECMA/standard</code> 嘛。</p><p>而 <code>standard</code> (标准) 一词在这里不局限于 “web 标准” 😃 。 举个例子：</p><ul><li>这个模块帮助我们将代码维持在一个<em>高的水准（standard of quality）</em></li><li>这个模块确定项目中的新手遵循一些基本的<em>样式规范（style standards）</em></li></ul><h2 id="有自动格式化工具么" tabindex="-1"><a class="header-anchor" href="#有自动格式化工具么" aria-hidden="true">#</a> 有自动格式化工具么？</h2><p>当然！你可以使用 <code>standard --fix</code> 来纠正大部分的代码问题。</p><p><code>standard --fix</code> 可以修正大部分约定俗成的问题，但有些错误（譬如忘记了错误处理）只能手动去修复了。</p><p>为了使用方便，<code>standard</code> 会在检测到有能够自动被修复的问题的时候，给出相应的提示 &quot;<code>运行 standard --fix 来自动修正一些问题</code>&quot;。</p><h2 id="如何排除某些文件" tabindex="-1"><a class="header-anchor" href="#如何排除某些文件" aria-hidden="true">#</a> 如何排除某些文件？</h2><p><code>node_modules/</code>、<code>coverage/</code>、<code>vendor/</code>、<code>*.min.js</code>、<code>bundle.js</code> 这些目录，还有以 <code>.</code> 开头的文件（譬如 <code>.git/</code>）或者文件夹自动被排除在外。</p><p><code>.gitignore</code> 里配置的文件也会自动排除掉。</p><p>有时你还是需要添加一些自定义的排除文件，可以在 <code>package.json</code> 里添加 <code>standard.ignore</code> 属性来配置：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;standard&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;**/out/&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;/lib/select2/&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;/lib/ckeditor/&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;tmp.js&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何隐藏某类警告" tabindex="-1"><a class="header-anchor" href="#如何隐藏某类警告" aria-hidden="true">#</a> 如何隐藏某类警告？</h2><p>很少的情况下你需要绕开 <code>standard</code> 以隐藏某些警告信息。</p>`,16),ga={href:"http://eslint.org/",target:"_blank",rel:"noopener noreferrer"},ba=t(`<p>对某一行禁用<strong>所有规则</strong>：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>file <span class="token operator">=</span> <span class="token string">&#39;I know what I am doing&#39;</span> <span class="token comment">// eslint-disable-line</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者，<strong>只禁</strong>用 <code>&quot;no-use-before-define&quot;</code> 这条规则：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>file <span class="token operator">=</span> <span class="token string">&#39;I know what I am doing&#39;</span> <span class="token comment">// eslint-disable-line no-use-before-define</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者，对<strong>多行</strong>禁用 <code>&quot;no-use-before-define&quot;</code> 这一规则：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* eslint-disable no-use-before-define */</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;offending code goes here...&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;offending code goes here...&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;offending code goes here...&#39;</span><span class="token punctuation">)</span>
<span class="token comment">/* eslint-enable no-use-before-define */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用的三方插件向全局暴露了变量-如何避免-variable-is-not-defined-的错误提示" tabindex="-1"><a class="header-anchor" href="#使用的三方插件向全局暴露了变量-如何避免-variable-is-not-defined-的错误提示" aria-hidden="true">#</a> 使用的三方插件向全局暴露了变量，如何避免 &quot;variable is not defined&quot; 的错误提示？</h2><p>一些三方库（比如 <code>mocha</code>）会向全局暴露变量（<code>describe</code>、<code>it</code>）。这些变量或方法即没有定义，也没有被 <code>require</code> 进来，所以 <code>standard</code> 会报出变量未定义的警告（这种警告通常情况下是很有用的）。这种情况下我们想对这些全局变量禁用检查。</p><p>为了让 <code>standard</code> 检测通过（同时也使代码更加易懂），在文件顶部添加如下配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* global myVar1, myVar2 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但如果你需要添加的文件太多，这种方式就显得繁琐了。这种情况下，运行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ standard <span class="token parameter variable">--global</span> myVar1 <span class="token parameter variable">--global</span> myVar2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者在 <code>package.json</code> 里配置：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;standard&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;globals&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;myVar1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;myVar2&quot;</span> <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>注意：<code>global</code> 和 <code>globals</code> 效果一样</em></p><h2 id="如何才能使用处于实验阶段的-javascript-特性-譬如-es-next" tabindex="-1"><a class="header-anchor" href="#如何才能使用处于实验阶段的-javascript-特性-譬如-es-next" aria-hidden="true">#</a> 如何才能使用处于实验阶段的 JavaScript 特性（譬如 ES Next）？</h2><p><code>standard</code> 支持最新的 ECMAScript 特性，ES8（ES2017），包括处于 “Stage 4” 仍在提案阶段的特性。</p><p>为了支持实验性的特性，<code>standard</code> 支持自定义 JavaScript 解析器。添加自定义解析器前请思考一下必要性。</p><p>从 npm 安装并使用自定义的解析器（示例：<code>npm install @babel/eslint-parser</code>）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ standard <span class="token parameter variable">--parser</span> @babel/eslint-parser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者将其添加到 <code>package.json</code> 配置中：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;standard&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;parser&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@babel/eslint-parser&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果全局安装（<code>npm install standard --global</code>）了 <code>standard</code> 的话，那么请确保 <code>@babel/eslint-parser</code> 也用 <code>npm install @babel/eslint-parser --global</code> 全局安装。</p><h2 id="我能使用其他-javascript-变种吗-例如-flow" tabindex="-1"><a class="header-anchor" href="#我能使用其他-javascript-变种吗-例如-flow" aria-hidden="true">#</a> 我能使用其他 JavaScript 变种吗，例如 Flow？</h2><p>同样地，想要使用一个 JS 变种之前，先考虑添加和使用它所带来的复杂度看是否值得这么去做。</p><p><code>standard</code> 支持 ESLint 插件。在 <code>standard</code> 处理代码前，使用任何一个插件来将代码编译成合法的 JS 即可。 从 npm 安装一个自定义的解析器 (示例：<code>npm install eslint-plugin-flowtype</code>) 然后运行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ standard <span class="token parameter variable">--plugin</span> flowtype
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者添加到<code>package.json</code>:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;standard&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;flowtype&quot;</span> <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果全局安装（<code>npm install standard --global</code>）了 <code>standard</code> 的话，那么请确保 <code>eslint-plugin-flowtype</code> 也用 <code>npm install eslint-plugin-flowtype --global</code> 全局安装。</p><p><em>注意：<code>plugin</code> 和 <code>plugins</code> 等价</em></p><h2 id="如何与-mocha-jasmine-和-qunit-这些测试工具搭配工作" tabindex="-1"><a class="header-anchor" href="#如何与-mocha-jasmine-和-qunit-这些测试工具搭配工作" aria-hidden="true">#</a> 如何与 Mocha，Jasmine 和 QUnit 这些测试工具搭配工作?</h2><p>为了能让 mocha 在你的测试文件中工作，将以下配置添加到测试文件头部：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* eslint-env mocha */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者运行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ standard <span class="token parameter variable">--env</span> mocha
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,36),ka=n("code",null,"mocha",-1),va=n("code",null,"jasmine",-1),_a=n("code",null,"qunit",-1),fa=n("code",null,"phantomjs",-1),Ea={href:"http://eslint.org/docs/user-guide/configuring.html#specifying-environments",target:"_blank",rel:"noopener noreferrer"},wa={href:"https://github.com/sindresorhus/globals/blob/master/globals.json",target:"_blank",rel:"noopener noreferrer"},ya=t(`<p><em>注意: <code>env</code> 与 <code>envs</code> 用哪个都一样。</em></p><h2 id="web-workers-有考虑过么" tabindex="-1"><a class="header-anchor" href="#web-workers-有考虑过么" aria-hidden="true">#</a> Web Workers 有考虑过么？</h2><p>添加以下注释到文件头部：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* eslint-env serviceworker */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样可以让 <code>standard</code> 知道 <code>self</code> 是 web worker 中的全局变量（同时也让人更容易看懂）。</p><h2 id="markdown-或者-html-文件中的代码能检查到吗" tabindex="-1"><a class="header-anchor" href="#markdown-或者-html-文件中的代码能检查到吗" aria-hidden="true">#</a> Markdown 或者 HTML 文件中的代码能检查到吗？</h2>`,6),Ba={href:"https://www.npmjs.com/package/standard-markdown",target:"_blank",rel:"noopener noreferrer"},ja=n("code",null,"standard-markdown",-1),Aa=t(`<p>此外，也有 ESLint 插件可以检查 Markdown、HTML 等其他类型文件中的代码：</p><p>检查 Markdown 文件中的代码，可以用这个 ESLint 插件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> eslint-plugin-markdown
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后运行以下命令来检查文件代码块中的代码：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ standard <span class="token parameter variable">--plugin</span> markdown <span class="token string">&#39;**/*.md&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>HTML 文件可以下面这个插件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> eslint-plugin-html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后运行以下命令来检查包含在 <code>&lt;script&gt;</code> 标签中的代码：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ standard <span class="token parameter variable">--plugin</span> html <span class="token string">&#39;**/*.html&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="有为-git-添加-pre-commit-钩子么" tabindex="-1"><a class="header-anchor" href="#有为-git-添加-pre-commit-钩子么" aria-hidden="true">#</a> 有为 git 添加 <code>pre-commit</code> 钩子么？</h2><p>这个问题问得好！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 确保将要提交的所有 JavaScript 代码通过 standard 规范的检查</span>
<span class="token keyword">function</span> <span class="token function-name function">xargs-r</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment"># Portable version of &quot;xargs -r&quot;. The -r flag is a GNU extension that</span>
  <span class="token comment"># prevents xargs from running if there are no input files.</span>
  <span class="token keyword">if</span> <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span> <span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> <span class="token parameter variable">-d</span> <span class="token string">$&#39;<span class="token entity" title="\\n">\\n</span>&#39;</span> path<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$path</span>&quot;</span> <span class="token operator">|</span> <span class="token function">cat</span> - <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token string">&quot;<span class="token variable">$@</span>&quot;</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>
<span class="token function">git</span> <span class="token function">diff</span> --name-only <span class="token parameter variable">--cached</span> <span class="token parameter variable">--relative</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&#39;\\.jsx\\?$&#39;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;s/[^[:alnum:]]/\\\\&amp;/g&#39;</span> <span class="token operator">|</span> xargs-r <span class="token parameter variable">-E</span> <span class="token string">&#39;&#39;</span> <span class="token parameter variable">-t</span> standard
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&#39;JavaScript Standard Style errors were detected. Aborting commit.&#39;</span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="怎样使输出好看些-带颜色" tabindex="-1"><a class="header-anchor" href="#怎样使输出好看些-带颜色" aria-hidden="true">#</a> 怎样使输出好看些，带颜色？</h2>`,13),xa={href:"https://www.npmjs.com/package/snazzy",target:"_blank",rel:"noopener noreferrer"},Sa=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> snazzy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后运行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ standard <span class="token operator">|</span> snazzy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),qa={href:"https://www.npmjs.com/package/standard-tap",target:"_blank",rel:"noopener noreferrer"},Da={href:"https://www.npmjs.com/package/standard-json",target:"_blank",rel:"noopener noreferrer"},Fa={href:"https://www.npmjs.com/package/standard-reporter",target:"_blank",rel:"noopener noreferrer"},Ca={href:"https://www.npmjs.com/package/standard-summary",target:"_blank",rel:"noopener noreferrer"},Ja=t(`<h2 id="有相关的-node-js-api-没" tabindex="-1"><a class="header-anchor" href="#有相关的-node-js-api-没" aria-hidden="true">#</a> 有相关的 Node.js API 没？</h2><p>有！</p><h3 id="async-standard-linttext-text-opts" tabindex="-1"><a class="header-anchor" href="#async-standard-linttext-text-opts" aria-hidden="true">#</a> <code>async standard.lintText(text, [opts])</code></h3><p>检查传入的 <code>text</code>。需要提供一个 <code>opts</code> 配置参数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token comment">// unique to lintText</span>
  <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>         <span class="token comment">// path of file containing the text being linted</span>

  <span class="token comment">// common to lintText and lintFiles</span>
  <span class="token literal-property property">cwd</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>              <span class="token comment">// current working directory (default: process.cwd())</span>
  <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>           <span class="token comment">// automatically fix problems</span>
  <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token comment">// file extensions to lint (has sane defaults)</span>
  <span class="token literal-property property">globals</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">// custom global variables to declare</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">// custom eslint plugins</span>
  <span class="token literal-property property">envs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>             <span class="token comment">// custom eslint environment</span>
  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// custom js parser (e.g. babel-eslint)</span>
  <span class="token literal-property property">usePackageJson</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// use options from nearest package.json?</span>
  <span class="token literal-property property">useGitIgnore</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token comment">// use file ignore patterns from .gitignore?</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 <code>package.json</code> 有相应配置也会自动被读取到。</p><p>包含结果的 <code>results</code> 包含如下属性：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">filePath</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">messages</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">ruleId</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">line</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">column</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">errorCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">warningCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token comment">// fixed source code (only present with {fix: true} option)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">errorCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">warningCount</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="async-standard-lintfiles-files-opts" tabindex="-1"><a class="header-anchor" href="#async-standard-lintfiles-files-opts" aria-hidden="true">#</a> <code>async standard.lintFiles(files, [opts])</code></h3><p>检查以 glob 形式指定的 <code>files</code> 参数所匹配到的所有文件。可以传入一个 <code>opts</code> 配置参数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token comment">// unique to lintFiles</span>
  <span class="token literal-property property">ignore</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>           <span class="token comment">// file globs to ignore (has sane defaults)</span>

  <span class="token comment">// common to lintText and lintFiles</span>
  <span class="token literal-property property">cwd</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>              <span class="token comment">// current working directory (default: process.cwd())</span>
  <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>           <span class="token comment">// automatically fix problems</span>
  <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token comment">// file extensions to lint (has sane defaults)</span>
  <span class="token literal-property property">globals</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">// custom global variables to declare</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">// custom eslint plugins</span>
  <span class="token literal-property property">envs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>             <span class="token comment">// custom eslint environment</span>
  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// custom js parser (e.g. babel-eslint)</span>
  <span class="token literal-property property">usePackageJson</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// use options from nearest package.json?</span>
  <span class="token literal-property property">useGitIgnore</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token comment">// use file ignore patterns from .gitignore?</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>回调同上。</p><h2 id="如何参与到-standard-规范中来" tabindex="-1"><a class="header-anchor" href="#如何参与到-standard-规范中来" aria-hidden="true">#</a> 如何参与到 <code>standard</code> 规范中来？</h2>`,13),Ma={href:"https://github.com/standard/standard/issues",target:"_blank",rel:"noopener noreferrer"},za={href:"https://github.com/standard/standard/pulls",target:"_blank",rel:"noopener noreferrer"},Ia=n("p",null,[s("来 freenode 的 "),n("code",null,"#standard"),s(" 频道与其他人一起聊天讨论！")],-1),La=n("p",null,[s("以下是一些 "),n("code",null,"standard"),s(" 生态里比较重要的包：")],-1),Ra={href:"https://github.com/standard/standard",target:"_blank",rel:"noopener noreferrer"},$a={href:"https://github.com/standard/standard-engine",target:"_blank",rel:"noopener noreferrer"},Na={href:"https://github.com/standard/eslint-config-standard",target:"_blank",rel:"noopener noreferrer"},Ta={href:"https://github.com/standard/eslint-config-standard-jsx",target:"_blank",rel:"noopener noreferrer"},Va={href:"https://github.com/standard/eslint-plugin-standard",target:"_blank",rel:"noopener noreferrer"},Pa={href:"https://github.com/eslint/eslint",target:"_blank",rel:"noopener noreferrer"},Ga={href:"https://github.com/standard/snazzy",target:"_blank",rel:"noopener noreferrer"},Wa={href:"https://github.com/standard/standard-www",target:"_blank",rel:"noopener noreferrer"},Ua={href:"https://github.com/standard/semistandard",target:"_blank",rel:"noopener noreferrer"},Ha=n("strong",null,[n("a",{href:"#%E6%9C%89%E7%8E%B0%E6%88%90%E7%9A%84%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6%E5%90%97"},"编辑器插件")],-1),Qa={href:"https://github.com/standard/standard-packages",target:"_blank",rel:"noopener noreferrer"},Ya=n("code",null,"standard",-1),Ka=n("strong",null,"的列表、还有一分非常棒的",-1),Xa={href:"https://github.com/standard/awesome-standard",target:"_blank",rel:"noopener noreferrer"},Oa=n("code",null,"standard",-1),Za=n("h2",{id:"协议",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#协议","aria-hidden":"true"},"#"),s(" 协议")],-1),ne=n("a",{href:"LICENSE"},"MIT",-1),se={href:"http://feross.org",target:"_blank",rel:"noopener noreferrer"};function ae(ee,te){const e=l("ExternalLinkIcon"),r=l("RouterLink");return i(),c("div",null,[h,m,p(` <p align="center">
  <a href="/docs/README-en.md">English</a> •
  <a href="/docs/README-esla.md">Español (Latinoamérica)</a> •
  <a href="/docs/README-fr.md">Français</a> •
  <a href="/docs/README-id.md">Bahasa Indonesia</a> •
  <a href="/docs/README-iteu.md">Italiano (Italian)</a> •
  <a href="/docs/README-ja.md">日本語 (Japanese)</a> •
  <a href="/docs/README-kokr.md">한국어 (Korean)</a> •
  <a href="/docs/README-ptbr.md">Português (Brasil)</a> •
  <a href="/docs/README-zhcn.md">简体中文 (Simplified Chinese)</a> •
  <a href="/docs/README-zhtw.md">繁體中文 (Taiwanese Mandarin)</a>
</p> `),g,n("ul",null,[b,k,v,n("li",null,[_,s(" – "),n("a",f,[s("这"),a(e)]),n("a",E,[s("没什么不好。"),a(e)]),n("a",w,[s("不骗你！"),a(e)])]),n("li",null,[y,n("ul",null,[B,n("li",null,[a(r,{to:"/Books/%E3%80%8AJavaScript%20%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%E3%80%8B%E7%AC%94%E8%AE%B0/RULES-zhcn.html#semicolons"},{default:o(()=>[s("详情")]),_:1})])])]),j,n("li",null,[n("strong",null,[a(r,{to:"/Books/%E3%80%8AJavaScript%20%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%E3%80%8B%E7%AC%94%E8%AE%B0/RULES-zhcn.html#javascript-standard-style"},{default:o(()=>[s("查看更多")]),_:1})]),s(" – "),A])]),n("p",null,[s("说了那么多，看看"),n("a",x,[s("这个遵循了 Standard 规范的示例文件"),a(e)]),s(" 中的代码吧。或者，这里还有"),n("a",S,[s("一大波使用了此规范的项目"),a(e)]),s(" 代码可供参考。")]),q,n("p",null,[n("em",null,[s("注意：运行以上命令的前提是已经安装了 "),n("a",D,[s("Node.js"),a(e)]),s(" 和 "),n("a",F,[s("npm"),a(e)]),s(" 。")])]),C,n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",J,[M,a(e)])]),n("th",null,[n("a",z,[I,a(e)])]),n("th",null,[n("a",L,[R,a(e)])]),n("th",null,[n("a",$,[N,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",T,[V,a(e)])]),n("th",null,[n("a",P,[G,a(e)])]),n("th",null,[n("a",W,[U,a(e)])]),n("th",null,[n("a",H,[Q,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",Y,[K,a(e)])]),n("th",null,[n("a",X,[O,a(e)])]),n("th",null,[n("a",Z,[nn,a(e)])]),n("th",null,[n("a",sn,[an,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",en,[tn,a(e)])]),n("th",null,[n("a",rn,[on,a(e)])]),n("th",null,[n("a",ln,[dn,a(e)])]),n("th",null,[n("a",cn,[pn,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",un,[hn,a(e)])]),n("th",null,[n("a",mn,[gn,a(e)])]),n("th",null,[n("a",bn,[kn,a(e)])]),n("th",null,[n("a",vn,[_n,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",fn,[En,a(e)])]),n("th",null,[n("a",wn,[yn,a(e)])]),n("th",null,[n("a",Bn,[jn,a(e)])]),n("th",null,[n("a",An,[xn,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",Sn,[qn,a(e)])]),n("th",null,[n("a",Dn,[Fn,a(e)])]),n("th",null,[n("a",Cn,[Jn,a(e)])]),n("th",null,[n("a",Mn,[zn,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",In,[Ln,a(e)])]),n("th",null,[n("a",Rn,[$n,a(e)])]),n("th",null,[n("a",Nn,[Tn,a(e)])]),n("th",null,[n("a",Vn,[Pn,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",Gn,[Wn,a(e)])]),n("th",null,[n("a",Un,[Hn,a(e)])]),n("th",null,[n("a",Qn,[Yn,a(e)])]),n("th",null,[n("a",Kn,[Xn,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",On,[Zn,a(e)])]),n("th",null,[n("a",ns,[ss,a(e)])]),n("th",null,[n("a",as,[es,a(e)])]),n("th",null,[n("a",ts,[rs,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",os,[ls,a(e)])]),n("th",null,[n("a",ds,[is,a(e)])]),n("th",null,[n("a",cs,[ps,a(e)])]),n("th",null,[n("a",us,[hs,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",ms,[gs,a(e)])]),n("th",null,[n("a",bs,[ks,a(e)])]),n("th",null,[n("a",vs,[_s,a(e)])]),n("th",null,[n("a",fs,[Es,a(e)])])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",null,[n("a",ws,[ys,a(e)])]),Bs,js,As])])]),n("p",null,[s("除公司组织外，"),n("a",xs,[s("很多个人"),a(e)]),s("也在项目中使用，这里就不一一罗列了。")]),n("p",null,[s("并且 "),Ss,s(" 在 GitHub 的"),n("a",qs,[s("代码检查类工具"),a(e)]),s(" 展示列表中也排名第一。")]),Ds,Fs,Cs,n("p",null,[s("通过 "),n("strong",null,[n("a",Js,[s("Package Control"),a(e)])]),s("，安装 "),n("strong",null,[n("a",Ms,[s("SublimeLinter"),a(e)])]),s(" 和 "),n("strong",null,[n("a",zs,[s("SublimeLinter-contrib-standard"),a(e)])]),s("。")]),n("p",null,[s("如果想要保存时自动格式化，还需安装 "),n("strong",null,[n("a",Is,[s("StandardFormat"),a(e)])]),s("。")]),Ls,n("p",null,[s("安装 "),n("strong",null,[n("a",Rs,[s("linter-js-standard"),a(e)])]),s("。")]),n("p",null,[s("如果想要保存时自动格式化，还需安装 "),n("strong",null,[n("a",$s,[s("standard-formatter"),a(e)])]),s("。安装 "),n("strong",null,[n("a",Ns,[s("standardjs-snippets"),a(e)])]),s(" 可以获得 snippets 特性。")]),Ts,n("p",null,[s("安装 "),n("strong",null,[n("a",Vs,[s("vscode-standard"),a(e)])]),s("（已经包含了自动格式化）。")]),n("p",null,[s("安装 "),n("strong",null,[n("a",Ps,[s("vscode-standardjs-snippets"),a(e)])]),s(" 以获得 JS snippets。安装 "),n("strong",null,[n("a",Gs,[s("vscode-react-standard"),a(e)])]),s(" 以获得 React snippets。")]),Ws,n("p",null,[s("安装 "),n("strong",null,[n("a",Us,[s("Syntastic"),a(e)])]),s(" 并添加如下配置到 "),Hs,s("：")]),Qs,n("p",null,[s("安装 "),n("strong",null,[n("a",Ys,[s("Flycheck"),a(e)])]),s(" 后查看 "),n("strong",null,[n("a",Ks,[s("manual"),a(e)])]),s(" 以了解如何在项目在启用。")]),Xs,n("p",null,[s("插件中搜索 "),n("strong",null,[n("a",Os,[s('"Standard Code Style"'),a(e)])]),s(' 然后点击 "Install"。')]),Zs,n("p",null,[s("WebStorm "),n("a",na,[s("最近宣布"),a(e)]),s("在其 IDE 中 自带 "),sa,s(" 规范。")]),n("p",null,[s("但是如果你仍然想自己动手配置，"),a(r,{to:"/Books/%E3%80%8AJavaScript%20%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%E3%80%8B%E7%AC%94%E8%AE%B0/webstorm.html"},{default:o(()=>[s("那么请看此教程")]),_:1}),s("。此教程适用于 JetBrains 全家桶，包括 PhpStorm、IntelliJ、RubyMine 等。")]),aa,ea,n("p",null,[n("a",ta,[ra,a(e)])]),oa,n("p",null,[n("a",la,[da,a(e)])]),ia,n("p",null,[s("不行。制定这套 "),ca,s(" 规范的目的就是让大家都不必再花时间浪费在"),n("a",pa,[s("无谓的"),a(e)]),s("代码风格之争上面了。关于缩进该用制表符还是空格这个问题已经争论了很久了，永远也没有答案。争论这个都可以把需求提前写完了。遵循 "),ua,s(" 规范，你就不用再犹豫了，毕竟不管怎样争论总归会选择一种风格的。希望大家也能在个人语义和普适价值上做一个权衡。")]),n("p",null,[s("如果你非要自己去配置成百上千项的 ESLint 规则，那你可以直接使用 "),n("a",ha,[s("eslint-config-standard"),a(e)]),s(" 来将个人配置包装在上层。")]),ma,n("p",null,[s("JavaScript Standard 代码规范底层使用的是 "),n("a",ga,[s("ESLint"),a(e)]),s("。所以如果你想隐藏某些警告，方法和使用 ESLint 时一样。")]),ba,n("p",null,[s("上面 "),ka,s(" 也可以是 "),va,s(", "),_a,s(", "),fa,s(" 等同类工具。这里有个来自 ESLint 的完整列表 "),n("a",Ea,[s("环境配置"),a(e)]),s(" 文档。环境中所有可用的全局变量可以这个 "),n("a",wa,[s("globals"),a(e)]),s(" npm 包中查到。")]),ya,n("p",null,[s("可以使用 "),n("a",Ba,[ja,a(e)]),s(" 来检查 Markdown 里的区位码。")]),Aa,n("p",null,[s("自带的输出信息简洁原始，如果想要炫酷好看，安装 "),n("a",xa,[s("snazzy"),a(e)]),s("：")]),Sa,n("p",null,[s("还有 "),n("a",qa,[s("standard-tap"),a(e)]),s("、 "),n("a",Da,[s("standard-json"),a(e)]),s("、 "),n("a",Fa,[s("standard-reporter"),a(e)]),s(" 和 "),n("a",Ca,[s("standard-summary"),a(e)]),s(" 这些类似的工具。")]),Ja,n("p",null,[s("欢迎参与进来！逛逛 "),n("a",Ma,[s("issues"),a(e)]),s(" 或者 "),n("a",za,[s("PRs"),a(e)]),s(" 页面，如果发现没有找到想要的问题可以自己提一个。")]),Ia,La,n("ul",null,[n("li",null,[n("strong",null,[n("a",Ra,[s("standard"),a(e)])]),s(" - 本仓库 "),n("ul",null,[n("li",null,[n("strong",null,[n("a",$a,[s("standard-engine"),a(e)])]),s(" - 一个 eslint 命令行引擎")]),n("li",null,[n("strong",null,[n("a",Na,[s("eslint-config-standard"),a(e)])]),s(" -standard 规范的 eslint 检查器")]),n("li",null,[n("strong",null,[n("a",Ta,[s("eslint-config-standard-jsx"),a(e)])]),s(" - standard (JSX) 的 eslint 规范")]),n("li",null,[n("strong",null,[n("a",Va,[s("eslint-plugin-standard"),a(e)])]),s(" - standard 规范自定义的 eslint 规则（不在 eslint 核心规则里面）")]),n("li",null,[n("strong",null,[n("a",Pa,[s("eslint"),a(e)])]),s(" - standard 基于它来实现的")])])]),n("li",null,[n("strong",null,[n("a",Ga,[s("snazzy"),a(e)])]),s(" - 美化输出")]),n("li",null,[n("strong",null,[n("a",Wa,[s("standard-www"),a(e)])]),s(" - https://standardjs.com 站点的源码")]),n("li",null,[n("strong",null,[n("a",Ua,[s("semistandard"),a(e)])]),s(" - standard 规范带分号的版本（如果你需要的话）")])]),n("p",null,[s("还有很多 "),Ha,s("、一个 **"),n("a",Qa,[s("使用 "),Ya,s(" 规范开发的 npm 包"),a(e)]),Ka,n("a",Xa,[Oa,s(" 生态中所使用到的包"),a(e)]),s("**的列表。")]),Za,n("p",null,[ne,s(". Copyright (c) "),n("a",se,[s("Feross Aboukhadijeh"),a(e)]),s(".")])])}const oe=d(u,[["render",ae],["__file","01.Standard Style说明.html.vue"]]);export{oe as default};
